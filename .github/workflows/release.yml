name: Deploy

on:
  push:
    tags:
      - "v*"

env:
  build: "${{ github.workspace }}/build"

jobs:
  deploy_aoc_model_extractor:
    name: "Deploy AocModelExtractor"
    runs-on: windows-latest

    env:
      proj_ame: "AocModelExtractor"
      proj_ase: "AocSoundExtractor"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: Install DotNET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: "Get Version"
        id: version
        uses: battila7/get-version-action@v2

      - name: Publish ${{ env.proj_ame }}
        run: dotnet publish ${{ env.proj_ame }}/${{ env.proj_ame }}.csproj -r win-x64 --configuration Release --version-suffix ${{ steps.version.outputs.version-without-v }} --output ${{ env.build }} -p:PublishSingleFile=true

      - name: Publish ${{ env.proj_ase }}
        run: dotnet publish ${{ env.proj_ase }}/${{ env.proj_ase }}.csproj -r win-x64 --configuration Release --version-suffix ${{ steps.version.outputs.version-without-v }} --output ${{ env.build }} -p:PublishSingleFile=true

      - name: "Release"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: AocResources - ${{ steps.version.outputs.version }}

      - name: "Upload release asset"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.build }}/${{ env.proj_ame }}.exe
          asset_name: ${{ env.proj_ame }}-${{ steps.version.outputs.version }}
          asset_content_type: application/exe

      - name: "Upload release asset"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.build }}/${{ env.proj_ase }}.exe
          asset_name: ${{ env.proj_ase }}-${{ steps.version.outputs.version }}
          asset_content_type: application/exe
